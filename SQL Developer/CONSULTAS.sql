--PRIORIDADES:
--1. SELECT
--2. ORIGENES-> FROM, JOIN
--3. DISCRIMINANTES->WHERE, HAVING
--4. ORDER BY, GROUP BY

--CREAR TABLA
CREATE TABLE AUTO(
    ID NUMBER PRIMARY KEY,
    MODELO NVARCHAR2(30),
    MARCA NVARCHAR2(30),
    PRECIO NUMBER
);

--ELIMINAR TABLA
DROP TABLE AUTO

--INSERT
INSERT INTO AUTO VALUES (1, 'SENTRA', 'NISSAN', 350000);
INSERT INTO AUTO VALUES(2, 'SPARK', 'CHEVROLET', 160000);
INSERT INTO AUTO VALUES(3, 'GOLF', 'VW', 450000);
INSERT INTO AUTO VALUES(4, 'MUSTANG', 'FORD', 400000);
INSERT INTO AUTO VALUES(5, 'VERSA', 'NISSAN', 290000);

--SELECT
SELECT * FROM AUTO;

--MOSTRAR AUTO QUE TENGA ID=4
SELECT ID, MODELO, MARCA, PRECIO FROM AUTO WHERE ID=4;

--MOSTRAR AUTO QUE TENGA ID=2 O iD=3
SELECT ID, MODELO, MARCA, PRECIO FROM AUTO WHERE ID=2 OR ID=4;

--MOSTRAR AUTOS QUE SU ID SEA MENOR A 4
SELECT ID, MODELO, MARCA, PRECIO FROM AUTO WHERE ID<4

--MOSTRAR AUTOS QUE SU ID SEA 1, 3, 4
SELECT ID, MODELO, MARCA, PRECIO FROM AUTO WHERE ID IN (1,3,4);
SELECT ID, MODELO, MARCA, PRECIO FROM AUTO WHERE ID NOT IN (2, 5);

--MOSTRAR AUTO QUE SU PRECIO SEA ENTRE 400000 Y 500000
SELECT * FROM AUTO WHERE PRECIO>=400000 AND PRECIO <= 500000;
SELECT * FROM AUTO WHERE PRECIO BETWEEN 400000 AND 500000;

--MOSTRAR AUTO ORDENADO DEL MAS CARO AL MAS BARATO
SELECT * FROM AUTO ORDER BY PRECIO DESC;
SELECT * FROM AUTO ORDER BY PRECIO ASC;

--MOSTRAR AUTO ORDENADO EN BASE A SU MODELO ALFABETICAMENTE
SELECT * FROM AUTO ORDER BY MODELO ASC;

--ELIMINAR REGISTRO NULO
DELETE FROM AUTO WHERE MARCA IS NULL;

--ELIMINAR TODOS LOS REGISTROS DE UNA TABLA
TRUNCATE TABLE AUTO;

--ACTUALIZAR CAMPO MARCA MODELO SPARK MARCA=CHEVROLET
UPDATE AUTO SET MARCA = 'CHEVROLET' WHERE MODELO = 'SPARK';

--BUSCAR AUTOS QUE SU MODELO EMPIECE CON 'S'
SELECT * FROM AUTO WHERE MODELO LIKE 'S%';

--MOSTRAR AUTOS QUE SU MODELO TERMINE CON 'A'
SELECT * FROM AUTO WHERE MODELO LIKE '%A';

--MOSTRAR AUTOS QUE SU MODELO TENGA UNA T
SELECT * FROM AUTO WHERE MODELO LIKE '%T%';

--AGRUPAR LAS MARCAS
SELECT  MARCA FROM AUTO GROUP BY  MARCA;

--                          ->OPERACIONES DE AGREGACIÓN<-
--MUESTREN EL PRECIO MAS CARO DE LOS AUTOS
SELECT MAX(PRECIO) PRECIO_CARO FROM AUTO;

--MUESTREN EL PRECIO MAS ECONOMICO DE LOS AUTOS
SELECT MIN(PRECIO) PRECIO_ECONOMICO FROM AUTO;

SELECT * FROM AUTO;


--CUENTEN CUANTOS AUTOS TENGO DE LA MARCA NISSAN
SELECT COUNT(*) CONTADOR FROM AUTO WHERE MARCA LIKE '%NISSAN';
SELECT COUNT(ID) CONTADOR FROM AUTO WHERE MARCA = 'NISSAN';

--MEDIA(PROMEDIO) DE PRECIO DE LOS AUTOS
SELECT AVG(PRECIO) MEDIA FROM AUTO;

SELECT * FROM AUTO;

--Muestren todos los campos, en el campo modelo quiero que todo este en minusculas
SELECT ID, MODELO, LOWER(MODELO) MINUSCULAS,  MARCA, PRECIO FROM AUTO;

--Muestren todos los campos, en el campo modelo requiero que me lo muestren en mayuscula
SELECT ID, MODELO, UPPER(MODELO) MINUSCULAS,  MARCA, PRECIO FROM AUTO;

--mostrar todos los campos, en el campo precio concatenar el caracter "$"->"$450000"
SELECT ID, MODELO, MARCA, CONCAT('$', PRECIO) AS PRECIO_N FROM AUTO;

--CUENTEN CUANTOS AUTOS TENGO DE CADA MARCA
SELECT MARCA, COUNT(MARCA) AS CANTIDAD 
FROM AUTO
GROUP BY MARCA;


SELECT MARCA, COUNT(MARCA) AS CANTIDAD 
FROM AUTO
GROUP BY MARCA;

--                                 ->SUBCONSULTAS<-
SELECT * FROM PROFESOR13 WHERE GANANCIA = (SELECT MAX(GANANCIA) MAX_GANANCIA FROM PROFESOR); 
--'=' SE UTILIZA PORQUE LA SUBCONSULTA DEVUELVE SOLO UN VALOR 
SELECT * FROM PROFESOR13 WHERE GANANCIA IN (SELECT GANANCIA FROM PROFESOR13);
--'IN' SE UTILIZA PORQUE LA SUBCONSULTA DEVUELVE VARIO VALORES

--                                 ->CONDICIONALES<-
CREATE TABLE COMPUTADORA(
    ID NUMBER PRIMARY KEY,
    MODELO NVARCHAR2(50),
    MARCA NUMBER,
    PRECIO NUMBER
);

SELECT * FROM COMPUTADORA;
INSERT INTO COMPUTADORA VALUES(1, 'PAVILLON', 1, 20000);
INSERT INTO COMPUTADORA VALUES(2, 'NOTEBOOK H1', 2, 25000);
INSERT INTO COMPUTADORA VALUES(3, 'DELL 01', 3, 18000);

SELECT ID, MODELO, 
(
    CASE MARCA
    WHEN 1 THEN 'HP'
    WHEN 2 THEN 'HUAWEI'
    WHEN 3 THEN 'DELL'
    WHEN 4 THEN 'LENOVO'
    ELSE 'NO ESTÁ'
    END
) MARCA_DETALLE, PRECIO
FROM COMPUTADORA;

--                                 ->JOINS<-
CREATE TABLE PAPA(
    ID NUMBER PRIMARY KEY,
    NOMBRE NVARCHAR2(50),
    APP NVARCHAR2(50),
    APM NVARCHAR2(50),
    EDAD NUMBER
);

CREATE TABLE HIJO(
    ID NUMBER PRIMARY KEY, 
    NOMBRE NVARCHAR2(50), 
    APP NVARCHAR2(50),
    APM NVARCHAR2(50), 
    HOBBIE NVARCHAR2(50), 
    ID_PAPA NUMBER, 
    CONSTRAINT FK_HIJO_PAPA FOREIGN KEY(ID_PAPA) REFERENCES PAPA(ID) --ID PAPA SE RELACIONA CON ID HIJO
);

INSERT INTO PAPA VALUES(1, 'GOKU', 'SON', 'CACAROTO', 40);
INSERT INTO PAPA VALUES(2, 'HOMERO', 'SIMPSON', 'MARCH', 55);
INSERT INTO PAPA VALUES(3, 'NARUTO', 'USUMAKI', 'SHIPPUDEN', 25);

INSERT INTO HIJO VALUES(1, 'GOHAN', 'SON', 'OCSATAN', 'ESTUDIAR', 1);
INSERT INTO HIJO VALUES(2, 'GOTEN', 'SON', 'OCSATAN', 'ESTUDIAR', 1);

INSERT INTO HIJO VALUES(3, 'BAR', 'SIMPSON', 'SPRING', 'TRAVESURAS', 2);
INSERT INTO HIJO VALUES(4, 'LISA', 'SIMPSON', 'SPRING', 'ESTUDIAR', 2);
INSERT INTO HIJO VALUES(5, 'MAGGIE', 'SIMPSON', 'SPRING', 'DORMIR', 2);

INSERT INTO HIJO VALUES(6, 'CHAVO', 'DEL', 'OCHO', 'JUGAR', NULL);

--INNER JOIN: MUESTRA LA INFORMACION QUE COINCIDE EN AMBAS TABLAS SIEMPRE Y CUANDO TENGAN RELACION
SELECT * 
FROM HIJO
INNER JOIN PAPA 
ON PAPA.ID = HIJO.ID_PAPA;

--OTRA FORMA DE REESCRIBIR LOS NOMBRE DE LOS CAMPOS
SELECT H.ID ID_H, H.NOMBRE NOM_H, H.APP APP_H, H.APM APM_H, H.HOBBIE,
P.ID ID_P, P.NOMBRE NOM_P, P.APP APP_P, P.APM APM_P, P.EDAD 
FROM HIJO H
INNER JOIN PAPA P
ON P.ID = H.ID_PAPA;

--LEFT JOIN:
SELECT H.ID ID_H, H.NOMBRE NOM_H, H.APP APP_H, H.APM APM_H, H.HOBBIE,
P.ID ID_P, P.NOMBRE NOM_P, P.APP APP_P, P.APM APM_P, P.EDAD 
FROM HIJO H
LEFT JOIN PAPA P
ON P.ID = H.ID_PAPA;

--RIGHT JOIN:
SELECT H.ID ID_H, H.NOMBRE NOM_H, H.APP APP_H, H.APM APM_H, H.HOBBIE,
P.ID ID_P, P.NOMBRE NOM_P, P.APP APP_P, P.APM APM_P, P.EDAD 
FROM HIJO H
RIGHT JOIN PAPA P
ON P.ID = H.ID_PAPA;

--FULL JOIN:
SELECT H.ID ID_H, H.NOMBRE NOM_H, H.APP APP_H, H.APM APM_H, H.HOBBIE,
P.ID ID_P, P.NOMBRE NOM_P, P.APP APP_P, P.APM APM_P, P.EDAD 
FROM HIJO H
FULL JOIN PAPA P
ON P.ID = H.ID_PAPA;